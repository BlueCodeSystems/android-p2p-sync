apply plugin: 'maven-publish'
apply plugin: 'signing'

def isReleaseBuild() {
    return !version.contains("SNAPSHOT")
}

def getRepositoryPassword() {
    return hasProperty('sonatypePassword') ? sonatypePassword : ""
}

def getRepositoryUsername() {
    return hasProperty('sonatypeUsername') ? sonatypeUsername : ""
}

android {
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

afterEvaluate { project ->
    
    publishing {
        publications {
            maven(MavenPublication) {
                from components.release
                
                artifactId = POM_SETTING_ARTIFACT_ID
                
                pom {
                    name = POM_SETTING_NAME
                    packaging = POM_SETTING_PACKAGING
                    description = POM_SETTING_DESCRIPTION
                    url = POM_SETTING_URL
                    
                    scm {
                        url = POM_SETTING_SCM_URL
                        connection = POM_SETTING_SCM_CONNECTION
                        developerConnection = POM_SETTING_SCM_DEV_CONNECTION
                    }
                    
                    licenses {
                        license {
                            name = POM_SETTING_LICENCE_NAME
                            url = POM_SETTING_LICENCE_URL
                            distribution = POM_SETTING_LICENCE_DIST
                        }
                    }
                    
                    developers {
                        developer {
                            id = POM_SETTING_DEVELOPER_ID
                            name = POM_SETTING_DEVELOPER_NAME
                        }
                    }
                }
            }
        }
        
        repositories {
            maven {
                def sonatypeRepositoryURL = isReleaseBuild() ?
                    "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/" :
                    "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                
                url = sonatypeRepositoryURL
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
        }
    }
    
    signing {
        // Use the local GnuPG command for signing (gpgcmd)
        useGpgCmd()
        // Sign on release builds when publishing to Sonatype or to Maven Local
        required {
            isReleaseBuild() && (
                gradle.taskGraph.hasTask(":publish") ||
                gradle.taskGraph.hasTask(":publishToMavenLocal") ||
                gradle.taskGraph.allTasks.any { it.name.toLowerCase().contains('publish') }
            )
        }
        sign publishing.publications.maven
    }
    
    nexusStaging {
        serverUrl = "https://s01.oss.sonatype.org/service/local/"
        username = getRepositoryUsername()
        password = getRepositoryPassword()
    }
}
